# ASSIGNEMENT 2 #
print('')
print('                   { FCS Cycle 49 }')
print('')
print('')
print('                    Assignement II ')
print('                    --------------')
print('')
print('')
print("1. Count Digits")
print("2. Find Max")
print("3.1. Count Tags")
print("3.2. Count Normalized Columns")
print("4. Exit")
print("- - - - - - - - - - - - - - -")

#function to count the number of digits recursively
def countdigit(x):
  if(x == 0 or x == ' ' or x == ''):
      return 0
  else:
      return 1 + countdigit(int(int(x)/ 10))
  
  
   
#function to find the maximum value in the list recursively
temp = -1
def findmax(y,i=0):
  global temp
  if i >= len(y):
    return temp
    
  elif int(temp) < int(y[i]):
    temp = int(y[i])
     
  return findmax(y,i+1)

#function to count the occurrences of the tag in the HTML code recursively
def count_tag_recursive(html_code, tag):
    count = 0
    open_tag = '<' + tag + '>'
    close_tag = '</' + tag + '>'

    if open_tag in html_code:
       count += 1
       html_code = html_code.replace(open_tag, '', 1)

    if close_tag in html_code:
       count += 1
       html_code = html_code.replace(close_tag, '', 1)

    if open_tag in html_code or close_tag in html_code:
       count += count_tag_recursive(html_code, tag)

    return count

#to choose a choise from the given
c= input("Enter a choice:")
print(c, end='. ')

# if for each choice in given #

# for first part
if c == '1':
  i=0
  x=input("enter a number:")
  if int(x)<0:
     x=input("please enter a new positive number:")
  else:
   count=countdigit(x)
   print("the number of digits:",count)

# for 2nd part
elif c == '2':
  y=input("enter a list of number:").split()
  max=findmax(y)
  print("the maximum is:",max)


# for 3rd part section 1
elif c == '3.1':
  #html_code=input("write a valid HTML code:")
  print("write a valid HTML code:")
  html_code = []
  while True:
    try:
        line = input()
    except EOFError:
        break
    html_code.append(line)
  tag=input("enter a tag:")
  print('')
  print("the tag {0} is present {1} times".format(tag, count_tag_recursive(html_code, tag)))


# for 3rd part section 2
elif c == '3.2':
 continue()

# for 4th part
else:
  exit()

