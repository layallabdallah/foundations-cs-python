print('')
print('                    { FCS Cycle 49 }')
print('')
print('')
print('')
print('Layal Abdallah           Midterm           Nov,12 2023')
print('                       -----------')
print('')
print('')
def display_menu():
  print("")
  print("-------------------------------------------")
  print("")
  # displaying the  menu #
  print(" Menu: \n 1. Open Tab \n 2. Close Tab \n 3. Switch Tab \n 4. Display All Tabs \n 5. Open Nested Tab \n 6. Clear All Tabs \n 7. Save Tabs \n 8. Import Tabs \n 9. Exit ")
  print("")
  print("-------------------------------------------")
  global c 
  c = input("Enter a choice: ")
  # if the user choose invalid number #
  if not c.isdigit() or int(c) > 9 :
    print("")
    print("Invalid choice")
    print("")
    display_menu()

tab_list = [] # creating an empty list #
# creating list of dictionnaries in this form: #
# tab_list = [{'title': 'title', 'url': 'url'}, ...] #
tab={} #creating an empty dictionnary #
tab_count=0 # initializing the tab count to 0 #

# function to validate a title #
def title_valid(title):
  if title.isalpha():
    print("Your title is valid! ")
    return True
  else:
    print("Your title is invalid! Please try again.")
    print("re-enter new title, please check if all the characters are alphabet letters (a-z):", end="")
    return title_valid(title=input())
  
# function to validate a URL #
def URL_valid(url): 
  if url.startswith('http://') or url.startswith('https://'):
    print("Your URL is valid! ")
    return True
  else:
    print("Your URL is invalid! Please try again.")
    print("re-enter new URL, please make sure the URL starts with (http://) or (https://) :", end="")
    return URL_valid (url=input())

# function for each given #
# for first part #
def open_tab():
  global tab_list
  global tab
  global tab_count
  print("")
  print("")
  print("1. Open Tab :")
  print("-------------")
  print("")
  title=""
  URL=""
  print("To add a new tab please enter the title and the URL respectively:")
  print("")
  print("Title:", end="")
  title= input()
  title_valid(title) # line 33 check if the title alphabet #
  print("-----------")
  print("URL:", end="")
  URL= input()
  URL_valid(URL) # line 43 check if the URL starts with http:// or https:// #
  tab = {
    "title" : title,
    "url" : URL
  }
  print("")
  tab_list.append(tab)
  tab_count+=1
  print(f"tab {tab} successively created! :")
  print("the list of open tabs:",tab_list)
  print("the number of open tabs:",tab_count)
  
  print("")

#function to get and check the index #
def get_index():
  index=0
  print("Please enter the index of the tab you want to work on it:", end="")
  index=input()
  print("")
  while(index.isnumeric() is False):
    print("Please enter a numeric index:",end="")
    index=input()
    print("")
  print("the list of open tabs:",tab_list)
  return index

# for second part #
def close_tab():
  print("")
  print("")
  print("1. close Tab :")
  print("--------------")
  print("")
  global tab_list
  global tab
  global tab_count
  index= get_index() #function line 88
    # we should check if the index is in the range of the tab_list #
  if int(tab_count) > 0:
    if int(index) < int(tab_count):
      print("")
      print(f"tab {tab_list[int(index)]} successively closed! :")
      tab_list.pop(int(index))
      tab_count-=1
      print("the list of open tabs:",tab_list)
      print("the number of open tabs:",tab_count)
 # no index is provided we should close the last openend tab #
    elif int(index) > int(tab_count):
      i = tab_count-1
      print("")
      print("this index is out of range, we will close th last open tab !")
      print(f"tab {tab_list[i]} successively closed! :")
      tab_list.pop(i)
      tab_count-=1
      print("the list of open tabs:",tab_list)
      print("the number of open tabs:",tab_count)
      print("")
  else:
    print("")
    print("No open tags, the list is empty!")

#to solve this part I wrote a get HTML function, I do my research on web scraping and I refer to this link: https://www.guru99.com/accessing-internet-data-with-python.html #
import urllib.request

def get_HTML(URL):
# open a connection to a URL using urllib2
   webUrl = urllib.request.urlopen(URL)
#get the result code and print it
   print ("result code: " + str(webUrl.getcode()) )
# read the data from the URL and print it
   data = webUrl.read()
   print ("the HTML code for this URL:", data)

# for third part #
def switch_tab():
  print("")
  print("")
  print("1. Switch Tab :")
  print("---------------")
  print("")
  global tab_list
  global tab
  global tab_count
  index= get_index() #function line 92
  # we should check if the index is in the range of the tab_list #
  if int(tab_count) > 0:
    if int(index) < int(tab_count):
     print("")
     print("the tab selected:" , tab_list[int(index)])
     URL = tab_list[int(index)]["url"]
     get_HTML(URL)
  # no index is provided we should get the content of the last open tab #
    elif int(index) >= int(tab_count):
     index = tab_count-1
     print("")
     print("this index is out of range, we will get the content of the last open tab !")
     print(f"content of the tab {tab_list[int(index)]} successively produced! :")
     print("")
     print("the tab selected:" , tab_list[int(index)])
     URL = tab_list[int(index)]["url"]
     get_HTML(URL)
  else:
   print("")
   print("No open tags, the list is empty!")

# for fourth part#
def print_titles(tab_list):
  for tab in tab_list:
      print("-",end="")
      print(tab["title"])
      if "nested_tablist" in tab:
        print_titles(tab["nested_tablist"])
print_titles(tab_list)

# for fifth part #
def open_nested(parent):
  tab_list[int(parent)].update ({"nested_tablist" : []})
  print("how many nested tabs do you want?", end="")
  i=input()
  for j in range(int(i)):
    print("")
    print("enter a title:", end="")
    #validate the title
    t=input()
    title_valid(t)
    print("enter a url:",end="")
    u=input()
    #validate the url
    URL_valid(u)
    tab_list[int(parent)]["nested_tablist"].append({"title": t , "URL": u})
    print("")
    print("the updated list:")
  print(tab_list[int(parent)])

#the sixth part #
def clear_tabs():
 print("")
 print("")
 print("6. Clear all Tabs :")
 print("---------------")
 print("")
 #clear the tab_list and tab_count
 tab_list.clear()
 tab_count=0
 print("")
 print("all open tabs are closed!",tab_list)
    
#the seventh part #
#import libraries#
import json
import requests
import os
def save_tabs(file_path):
   print("")
   print("")
   print("7. save tabs :")
   print("--------------")
   print("")
  #using json format 
  # I use this link as reference to json files https://www.geeksforgeeks.org/python-os-path-isfile-method/ #
   with open(file_path, "w") as f: #mode write in json file
    json.dump(tab_list, f)
    # json.dumps() function will convert a subset of Python objects into a json string.
    print("the tabs are saved!")
    print(f"file path : {file_path}")# print the path

# the eight part #
# the eight part #
def Import_tabs(file_path):
    with open(file_path) as f: #open the file
     data = json.load(f) #get the data from json file
    print(data) #print it

# start with the choice #
c=0
while int(c) <= 9:
  print("")
  if int(c) == 1: open_tab()
  elif int(c) == 2: close_tab()
  elif int(c) == 3: switch_tab()
  elif int(c) == 4: 
    print("")
    print("")
    print("4. Display All Tabs :")
    print("---------------------")
    print("")
    print_titles(tab_list)
  elif int(c) == 5: 
    print("Please enter the index of the parent:", end="")
    parent=input()
    #check the validity of the index#
    if int(parent) < int(tab_count):
      print("")
      print("the tab selected:" , tab_list[int(parent)])
      print("")
      open_nested(parent)
    else:
      print(f"please enter a index less than",tab_count, end=":")
      parent=input()
      open_nested(parent)
  elif int(c) == 6: clear_tabs()
  elif int(c) == 7:
     print("please enter the name of list that you want its path:")
     if input() == 'tab_list':
      file_path = os.path.join(os.getcwd(), "tab_list.json")
     msave_tabs(file_path)
  elif int (c) == 8: 
     print("Enter a file path please:")
     print("please enter file path in form of file.json:")
     json_path=input() #get the path
     file_path = os.path.join(os.getcwd(), json_path)
     Import_tabs(file_path)


  elif int(c)==9:
     print("Thankyou! Have a nice day!")
     exit() #exit the program

 
    
  display_menu()
  


